package org.crowdfund.models.db;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.ToString;
import software.amazon.awssdk.enhanced.dynamodb.extensions.annotations.DynamoDbAutoGeneratedTimestampAttribute;
import software.amazon.awssdk.enhanced.dynamodb.extensions.annotations.DynamoDbVersionAttribute;
import software.amazon.awssdk.enhanced.dynamodb.mapper.UpdateBehavior;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbAttribute;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbImmutable;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbPartitionKey;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbSecondaryPartitionKey;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbUpdateBehavior;

import java.math.BigDecimal;
import java.time.Instant;


/**
 * Model class for to store Donation done on project
 */
@ToString
@Builder(toBuilder = true)
@Getter
@AllArgsConstructor
@NoArgsConstructor
@DynamoDbImmutable(builder = Donation.DonationBuilder.class)
public class Donation {

    /**
     * The constant TABLE_NAME.
     */
    public static final String TABLE_NAME = "Donations";
    /**
     * The constant DONATION_ID.
     */
    public static final String DONATION_ID = "DonationId";
    /**
     * The constant DONOR_ID_INDEX.
     */
    public static final String DONOR_ID_INDEX = "DonorId-Index";
    /**
     * The constant DONOR_ID.
     */
    public static final String DONOR_ID = "DonorId";
    /**
     * The constant PROJECT_ID.
     */
    public static final String PROJECT_ID = "ProjectId";
    /**
     * The constant PROJECT_ID_INDEX.
     */
    public static final String PROJECT_ID_INDEX = "ProjectId-Index";

    @Getter(onMethod = @__({@DynamoDbAttribute(DONATION_ID), @DynamoDbPartitionKey}))
    private String donationId;
    @Getter(onMethod = @__({@DynamoDbAttribute(DONOR_ID),
            @DynamoDbSecondaryPartitionKey(
                    indexNames = {DONOR_ID_INDEX})}))
    private String donorId;
    @Getter(onMethod = @__({@DynamoDbAttribute(PROJECT_ID),
            @DynamoDbSecondaryPartitionKey(
                    indexNames = {PROJECT_ID_INDEX})}))
    private String projectId;
    @Getter(onMethod = @__({@DynamoDbAttribute("Amount")}))
    private BigDecimal donationAmount;
    @Getter(onMethod = @__({@DynamoDbAttribute("Comment")}))
    private String comment;
    @Getter(onMethod = @__({@DynamoDbAttribute("Version"),
            @DynamoDbVersionAttribute}))
    private Integer version;

    @Getter(onMethod = @__({
            @DynamoDbAttribute("CreateDate"),
            @DynamoDbAutoGeneratedTimestampAttribute,
            @DynamoDbUpdateBehavior(UpdateBehavior.WRITE_IF_NOT_EXISTS)}))
    private Instant createDate;

    @Getter(onMethod = @__({@DynamoDbAutoGeneratedTimestampAttribute,
            @DynamoDbAttribute("UpdateDate"),
            @DynamoDbUpdateBehavior(UpdateBehavior.WRITE_ALWAYS)}))
    private Instant updateDate;
}
