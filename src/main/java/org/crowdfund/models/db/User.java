package org.crowdfund.models.db;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.ToString;
import org.crowdfund.models.UserRole;
import software.amazon.awssdk.enhanced.dynamodb.extensions.annotations.DynamoDbAutoGeneratedTimestampAttribute;
import software.amazon.awssdk.enhanced.dynamodb.extensions.annotations.DynamoDbVersionAttribute;
import software.amazon.awssdk.enhanced.dynamodb.mapper.UpdateBehavior;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbAttribute;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbImmutable;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbPartitionKey;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbSecondaryPartitionKey;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbSecondarySortKey;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbUpdateBehavior;

import java.time.Instant;

@ToString
@Builder
@Getter
@AllArgsConstructor
@NoArgsConstructor
@DynamoDbImmutable(builder = User.UserBuilder.class)
public class User {
    public static final String TABLE_NAME = "Users";
    public static final String USER_ID = "userId";
    public static final String USER_ROLE = "role";
    public static final String USER_ROLE_TO_USER_ID_INDEX = "role-UserId-index";
    @Getter(onMethod = @__({@DynamoDbPartitionKey, @DynamoDbAttribute(USER_ID),
            @DynamoDbSecondarySortKey(
                    indexNames = {USER_ROLE_TO_USER_ID_INDEX})}))
    private String userId;
    private String name;
    private String alias;
    @Getter(onMethod = @__({@DynamoDbSecondaryPartitionKey(
                    indexNames = {USER_ROLE_TO_USER_ID_INDEX})}))
    private UserRole role;

    @Getter(onMethod = @__({@DynamoDbAutoGeneratedTimestampAttribute,
            @DynamoDbUpdateBehavior(UpdateBehavior.WRITE_IF_NOT_EXISTS)}))
    private Instant createDate;

    @Getter(onMethod = @__({@DynamoDbAutoGeneratedTimestampAttribute,
            @DynamoDbUpdateBehavior(UpdateBehavior.WRITE_ALWAYS)}))
    private Instant updateDate;
    /**
     * account number where money to be transferred
     */
    private String bankAccountNumber;
    @Getter(onMethod = @__({@DynamoDbVersionAttribute}))
    private Integer version;
}
